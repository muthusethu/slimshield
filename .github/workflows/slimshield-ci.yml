name: SlimShield CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  slimshield-scan:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: 🛠️ Generate Sample Dockerfile (CI only)
        run: |
          mkdir -p test_dockerfiles
          echo -e "FROM python:3.11\nRUN echo 'SECRET_KEY=123456'" > test_dockerfiles/sample.Dockerfile

      - name: 🛡️ Dockerfile Scan (JSON + HTML)
        run: |
          mkdir -p reports
          python cli.py --dockerfile test_dockerfiles/sample.Dockerfile \
                        --format json --output reports/dockerfile-scan.json \
                        --fail-on-high --fail-on-licenses --fail-on-secrets || true

          python cli.py --dockerfile test_dockerfiles/sample.Dockerfile \
                        --format html --output reports/dockerfile-scan.html || true

      - name: 🐳 Build Docker Image
        run: |
          docker build -t slimshield:test -f test_dockerfiles/sample.Dockerfile .

      - name: 🛡️ Docker Image Scan
        run: |
          python cli.py --image slimshield:test \
                        --format json --output reports/image-scan.json \
                        --fail-on-high --fail-on-licenses --fail-on-secrets || true

      - name: 📤 Upload Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: slimshield-scan-reports
          path: reports/

      - name: 💬 Auto-comment PR with scan summary
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          summary="### 🔐 SlimShield Scan Summary

          **Dockerfile Scan:** ✅  
          **Image Scan:** ✅  
          **Flags Used:** \`--fail-on-high\`, \`--fail-on-licenses\`, \`--fail-on-secrets\`  

          📄 Reports are available as uploaded artifacts (JSON + HTML)."

          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -X POST -d "{\"body\": \"$summary\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
